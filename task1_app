import gradio as gr
import sqlite3

# Initialize the database connection
conn = sqlite3.connect('task.db')
c = conn.cursor()

# Create tasks table
c.execute('''CREATE TABLE IF NOT EXISTS tasks (id INTEGER PRIMARY KEY, description TEXT, status TEXT)''')
conn.commit()

class TaskManager:
    def __init__(self):
        self.task_options = ["Incomplete", "Complete"]
    
    def add_task(self, description):
        c.execute("INSERT INTO tasks (description, status) VALUES (?,?)", (description, "Incomplete"))
        conn.commit()
    
    def view_tasks(self):
        c.execute("SELECT * FROM tasks")
        tasks = c.fetchall()
        return tasks
    
    def update_task(self, id, status):
        c.execute("UPDATE tasks SET status=? WHERE id=?", (status, id))
        conn.commit()

tm = TaskManager()

def add_task(description):
    tm.add_task(description)
    return "Task added successfully!"

def view_tasks():
    tasks = tm.view_tasks()
    return tasks

def update_task(id, status):
    tm.update_task(id, status)
    return "Task updated successfully!"

inputs = [
    gr.inputs.Textbox(label="Task Description"),
    gr.components.Dropdown(label="Task Status", choices=tm.task_options),
    gr.inputs.Number(label="Task ID"),
]

outputs = [
    gr.outputs.Textbox(label="Add Task"),
    gr.outputs.Textbox(label="View Tasks"),
    gr.outputs.Textbox(label="Update Task"),
]

iface = gr.Interface(
    fn = [add_task, view_tasks, update_task],
    inputs = inputs,
    outputs = outputs,
    title = "Task Manager",
    theme = "dark"
)

iface.launch()
